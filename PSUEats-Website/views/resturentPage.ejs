<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= restaurant.name %> Menu</title> <!-- Dynamic Restaurant Name -->
    <script src="https://kit.fontawesome.com/6991b496f2.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href="style.css">
    <style>
        /* Your CSS styles will remain the same */
        body {
            font-family: Arial, sans-serif;
            background-color: #f3f4f6;
            margin: 0;
            padding: 0;
            overflow-x: hidden;
        }

        header {
            background-color: #1d3557;
            color: white;
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            gap: 15px;
            flex-wrap: wrap;
        }

        header h1 {
            font-size: 1.8rem;
            margin: 0;
            flex: 1;
        }

        nav {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        nav a:first-child {
            background-color: #efb300;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            color: white;
            text-decoration: none;
            transition: background-color 0.3s;
            font-size: 1rem;
        }

        nav a:nth-child(2) {
            background-color: #d80000;
            border: none;
            padding: 10px 20px;
            border-radius: 5px;
            cursor: pointer;
            color: white;
            text-decoration: none;
            transition: background-color 0.3s;
            font-size: 1rem;
        }

        .cart-icon {
            position: relative;
            font-size: 1.5rem;
            cursor: pointer;
        }

        .cart-icon span {
            position: absolute;
            top: -5px;
            right: -10px;
            background-color: red;
            color: white;
            border-radius: 50%;
            padding: 2px 6px;
            font-size: 0.8rem;
            font-weight: bold;
        }

        .search-bar {
            margin: 20px 0;
            display: flex;
            justify-content: center;
        }

        .search-bar input {
            width: 60%;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ccc;
            margin-right: 10px;
            background-color: white;
        }

        .search-bar button {
            padding: 10px;
            background-color: #28a745;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .search-bar button:hover {
            background-color: #218838;
        }

        #menu-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin: 20px;
        }

        .menu-item {
            background-color: white;
            border-radius: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
            padding: 20px;
            text-align: center;
            height: auto;
        }

        .menu-item img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 10px;
        }

        .quantity-controls {
            display: flex;
            align-items: center;
            justify-content: center;
            margin-top: 10px;
        }

        .quantity-controls button {
            background-color: #1d3557;
            color: white;
            border: none;
            padding: 5px 10px;
            border-radius: 5px;
            cursor: pointer;
        }

        footer {
            text-align: center;
            margin: 20px 0;
            font-size: 14px;
            color: #555;
        }

        .quantity-controls button:hover {
            background-color: #16324f;
        }

        .quantity-controls button:active {
            background-color: #0ea600;
        }

        @media screen and (max-width: 1368px) {
            .menu-item img {
                width: 100%;
                height: 60%;
                object-fit: fill;
                border-radius: 10px;
            }
        }
    </style>
</head>

<body>
    <header>
        <h1><%= restaurant.name %> Menu</h1> <!-- Dynamic Restaurant Name -->
        <nav>
            <a href="/home">Home</a>
            <a href="/logout">Logout</a>
            <div class="cart-icon" onclick="viewCart()">
                ðŸ›’ <span id="cartCount">0</span>
            </div>
        </nav>
    </header>

    <div class="search-bar">
        <input type="text" id="searchInput" placeholder="Search for dishes...">
        <button onclick="searchMenu()">Search</button>
    </div>

    <div id="menu-container">
        <!-- Menu items will be dynamically inserted here -->
    </div>
    <hr>

    <footer>
        &copy; 2024 <%= restaurant.name %>. All rights reserved. <!-- Dynamic Restaurant Name -->
    </footer>

    <script>
        let allMenuItems = []; // Store all menu items globally
        let cart = JSON.parse(localStorage.getItem('cart')) || {}; // Initialize cart from localStorage

        async function fetchMenuItems() {
            try {
                const response = await fetch(`/get-menu-items?restaurant=<%= restaurant.name %>`); <!-- Dynamic Restaurant -->
                if (!response.ok) throw new Error('Failed to fetch menu items');
                allMenuItems = await response.json();
                displayMenu(allMenuItems);
            } catch (error) {
                console.error('Error fetching menu items:', error);
            }
        }

        function displayMenu(menuItems) {
            const menuContainer = document.getElementById('menu-container');
            menuContainer.innerHTML = '';

            menuItems.forEach(item => {
                const menuItemCard = document.createElement('div');
                menuItemCard.className = 'menu-item';
                menuItemCard.innerHTML = `
                    <img src="${item.dishPic}" alt="${item.dishname}">
                    <h4>${item.dishname}</h4>
                    <p>Price: ${item.price} SR</p>
                    <p>${item.calories}</p>
                    <div class="quantity-controls">
                        <button onclick="changeQuantity('${item.dishname}', -1)">-</button>
                        <input type="text" id="quantity-${item.dishname}" value="${cart[item.dishname] || 0}" readonly>
                        <button onclick="changeQuantity('${item.dishname}', 1)">+</button>
                    </div>
                `;
                menuContainer.appendChild(menuItemCard);
            });
        }

        function changeQuantity(dishname, change) {
            const quantityInput = document.getElementById(`quantity-${dishname}`);
            let currentQuantity = parseInt(quantityInput.value);

            currentQuantity += change;
            if (currentQuantity < 0) currentQuantity = 0;
            quantityInput.value = currentQuantity;

            if (currentQuantity > 0) {
                cart[dishname] = currentQuantity;

                // Store price and image URL in localStorage
                const item = allMenuItems.find(item => item.dishname === dishname);
                if (item) {
                    const priceData = JSON.parse(localStorage.getItem('priceData')) || {};
                    const imageData = JSON.parse(localStorage.getItem('imageData')) || {};
                    const shopData = JSON.parse(localStorage.getItem('shopData')) || {};

                    priceData[dishname] = item.price; // Store price
                    imageData[dishname] = item.dishPic; // Store image URL
                    shopData[dishname] = "<%= restaurant.name %>"; // Store the shop name
                    localStorage.setItem('shopData', JSON.stringify(shopData));
                    localStorage.setItem('priceData', JSON.stringify(priceData));
                    localStorage.setItem('imageData', JSON.stringify(imageData));
                }
            } else {
                delete cart[dishname];
            }

            localStorage.setItem('cart', JSON.stringify(cart)); // Save cart to localStorage
            updateCart();
        }

        function updateCart() {
            const cartCount = Object.values(cart).reduce((sum, qty) => sum + qty, 0);
            document.getElementById('cartCount').textContent = cartCount;
        }

        function viewCart() {
            window.location.href = 'cart.html';
        }

        function searchMenu() {
            const query = document.getElementById('searchInput').value.toLowerCase();
            const filteredItems = allMenuItems.filter(item =>
                item.dishname.toLowerCase().includes(query)
            );
            displayMenu(filteredItems);
        }

        window.onload = () => {
            fetchMenuItems();
            updateCart(); // Sync cart on page load
        };
    </script>

</body>

</html>
